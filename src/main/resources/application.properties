server.port=8080
spring.application.name=AttendanceTracker

# Use Railway environment variables for database connection
spring.datasource.url=jdbc:mysql://${MYSQL_HOST}:${MYSQL_PORT}/${MYSQL_DATABASE}
spring.datasource.username=${MYSQL_USER}
spring.datasource.password=${MYSQL_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# Email Configuration (Use Railway environment variables for sensitive data)
spring.mail.host=${MAIL_HOST}
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Selenium Configuration (Specify the correct path in your Railway environment)
selenium.chrome-driver-path=/app/lib/chromedriver   # Railway environment path
selenium.headless=true  # Set headless mode to true for production
selenium.screenshot-path=${USER_HOME}/attendance_screenshots/  # Use a path relative to the Railway environment

# Attendance Check Scheduling (cron expression)
scheduling.enabled=true  # Enable scheduling in production
attendance.check.schedule=0 */5 * * * *  # Adjust based on requirements
attendance.threshold=75.0

# Security Configuration (Use environment variables for username/password)
spring.security.user.name=${SECURITY_USER_NAME}
spring.security.user.password=${SECURITY_USER_PASSWORD}
